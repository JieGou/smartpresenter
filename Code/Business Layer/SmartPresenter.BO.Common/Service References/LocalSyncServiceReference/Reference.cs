//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartPresenter.BO.Common.LocalSyncServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SyncFileType", Namespace="http://schemas.datacontract.org/2004/07/SmartPresenter.Service.LocalSync")]
    public enum SyncFileType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Presentation = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Image = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Video = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Audio = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Setting = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Xml = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Playlist = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Library = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LocalSyncServiceReference.ISyncService")]
    public interface ISyncService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/UploadFile", ReplyAction="http://tempuri.org/ISyncService/UploadFileResponse")]
        void UploadFile(System.Guid userId, System.Guid libraryId, System.Guid fileId, string fileName, SmartPresenter.BO.Common.LocalSyncServiceReference.SyncFileType fileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/UploadFile", ReplyAction="http://tempuri.org/ISyncService/UploadFileResponse")]
        System.Threading.Tasks.Task UploadFileAsync(System.Guid userId, System.Guid libraryId, System.Guid fileId, string fileName, SmartPresenter.BO.Common.LocalSyncServiceReference.SyncFileType fileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DownloadFile", ReplyAction="http://tempuri.org/ISyncService/DownloadFileResponse")]
        void DownloadFile(System.Guid userId, System.Guid libraryId, System.Guid fileId, string fileName, SmartPresenter.BO.Common.LocalSyncServiceReference.SyncFileType fileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISyncService/DownloadFile", ReplyAction="http://tempuri.org/ISyncService/DownloadFileResponse")]
        System.Threading.Tasks.Task DownloadFileAsync(System.Guid userId, System.Guid libraryId, System.Guid fileId, string fileName, SmartPresenter.BO.Common.LocalSyncServiceReference.SyncFileType fileType);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISyncServiceChannel : SmartPresenter.BO.Common.LocalSyncServiceReference.ISyncService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SyncServiceClient : System.ServiceModel.ClientBase<SmartPresenter.BO.Common.LocalSyncServiceReference.ISyncService>, SmartPresenter.BO.Common.LocalSyncServiceReference.ISyncService {
        
        public SyncServiceClient() {
        }
        
        public SyncServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SyncServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SyncServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SyncServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void UploadFile(System.Guid userId, System.Guid libraryId, System.Guid fileId, string fileName, SmartPresenter.BO.Common.LocalSyncServiceReference.SyncFileType fileType) {
            base.Channel.UploadFile(userId, libraryId, fileId, fileName, fileType);
        }
        
        public System.Threading.Tasks.Task UploadFileAsync(System.Guid userId, System.Guid libraryId, System.Guid fileId, string fileName, SmartPresenter.BO.Common.LocalSyncServiceReference.SyncFileType fileType) {
            return base.Channel.UploadFileAsync(userId, libraryId, fileId, fileName, fileType);
        }
        
        public void DownloadFile(System.Guid userId, System.Guid libraryId, System.Guid fileId, string fileName, SmartPresenter.BO.Common.LocalSyncServiceReference.SyncFileType fileType) {
            base.Channel.DownloadFile(userId, libraryId, fileId, fileName, fileType);
        }
        
        public System.Threading.Tasks.Task DownloadFileAsync(System.Guid userId, System.Guid libraryId, System.Guid fileId, string fileName, SmartPresenter.BO.Common.LocalSyncServiceReference.SyncFileType fileType) {
            return base.Channel.DownloadFileAsync(userId, libraryId, fileId, fileName, fileType);
        }
    }
}
