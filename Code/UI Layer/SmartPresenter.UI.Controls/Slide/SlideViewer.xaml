<UserControl x:Class="SmartPresenter.UI.Controls.Slide.SlideViewer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:Common="clr-namespace:SmartPresenter.UI.Common;assembly=SmartPresenter.UI.Common"
             xmlns:Local="clr-namespace:SmartPresenter.UI.Controls"
             xmlns:Popups="clr-namespace:SmartPresenter.UI.Controls.Popups"
             xmlns:Resources="clr-namespace:SmartPresenter.UI.Controls.Resources"
             xmlns:ViewModel="clr-namespace:SmartPresenter.UI.Controls.ViewModel"
             xmlns:Toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:Interactivity="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:Interactions="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:prism="http://www.codeplex.com/prism"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/SmartPresenter.UI.Controls;component/Slide/SlideViewerResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Interactivity:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding QuickEditNotificationRequest, Mode=OneWay}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <Popups:QuickEditPopup/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding HotKeyNotificationRequest, Mode=OneWay}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <Popups:HotKeyPopup/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
        <prism:InteractionRequestTrigger SourceObject="{Binding NextSlideTimerNotificationRequest, Mode=OneWay}">
            <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True">
                <prism:PopupWindowAction.WindowContent>
                    <Popups:NextSlideTimerPopup/>
                </prism:PopupWindowAction.WindowContent>
            </prism:PopupWindowAction>
        </prism:InteractionRequestTrigger>
    </Interactivity:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="35"/>
        </Grid.RowDefinitions>

        <ContentControl Style="{StaticResource SlideAreaStyle}" Grid.Row="0" x:Name="slideEditor"/>
        <!--  Tag is being used to pass the Placement Target down to the button  -->
        <Common:SplitButton Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="5"
                           Command="{Binding Path=DataContext.AddSlideCommand,
                                             RelativeSource={RelativeSource Mode=FindAncestor,
                                                                            AncestorType=UserControl}}"
                           ContextMenu="{Binding Path=ContextMenu,
                                                 RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                AncestorType=UserControl}}"
                           Tag="{Binding Path=Tag,
                                         RelativeSource={RelativeSource Mode=FindAncestor,
                                                                        AncestorType=UserControl}}" />

        <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="5" HorizontalAlignment="Right">           
            <ToggleButton Grid.Row="1" Content="E" FontSize="15" FontWeight="ExtraBold" MinWidth="30" Margin="2 0"
                    Command="{Binding ChangeViewModeCommand}" CommandParameter="Editor"/>
            <ToggleButton Grid.Row="1" Content="T" FontSize="15" FontWeight="ExtraBold" MinWidth="30"  Margin="2 0"
                    Command="{Binding ChangeViewModeCommand}" CommandParameter="Thumbnail"/>
            <ToggleButton Grid.Row="1" Content="D" FontSize="15" FontWeight="ExtraBold" MinWidth="30" Margin="2 0"
                    Command="{Binding ChangeViewModeCommand}" CommandParameter="Details"/>
            <ToggleButton Grid.Row="1" Content="SS" FontSize="15" FontWeight="ExtraBold" MinWidth="30"  Margin="2 0"
                    Command="{Binding ChangeViewModeCommand}" CommandParameter="SlideShow"/>
        </StackPanel>
    </Grid>

</UserControl>
