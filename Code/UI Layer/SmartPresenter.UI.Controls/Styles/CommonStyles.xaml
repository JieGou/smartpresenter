<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:UICommon="clr-namespace:SmartPresenter.UI.Common;assembly=SmartPresenter.UI.Common"                    
                    xmlns:Local="clr-namespace:SmartPresenter.UI.Controls"
                    xmlns:ViewModel="clr-namespace:SmartPresenter.UI.Controls.ViewModel"
                    xmlns:Toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:Interactivity="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:Interactions="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:prism="http://www.codeplex.com/prism">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/SmartPresenter.UI.Common;component/Styles/CommonBrushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <UICommon:BooleanToVisibilityConverter x:Key="BooleanVisibilityConverter" IsCollapsing="True" />

    <ItemsPanelTemplate x:Key="SlideChildrenPanelTemplate">
        <Canvas Background="{Binding DataContext.Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" />
    </ItemsPanelTemplate>

    <Style x:Key="SlideChildStyleBase">
        <Setter Property="Canvas.Left" Value="{Binding Path=ViewerX, Mode=OneWay}" />
        <Setter Property="Canvas.Top" Value="{Binding Path=ViewerY, Mode=OneWay}" />
        <Setter Property="ListBoxItem.Width" Value="{Binding Path=Width, Mode=OneWayToSource}" />
        <Setter Property="ListBoxItem.Height" Value="{Binding Path=Height, Mode=OneWayToSource}" />
        <Setter Property="ListBoxItem.IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
        <Setter Property="ListBoxItem.Padding" Value="0" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
    </Style>

    <DataTemplate DataType="{x:Type ViewModel:RectangleView}">
        <Border Width="{Binding ViewerWidth}" Height="{Binding ViewerHeight}" Background="{Binding Background}" CornerRadius="{Binding CornerRadius}" 
                BorderBrush="{Binding Stroke}" BorderThickness="{Binding StrokeThickness}" RenderTransform="{Binding Transform}"
                RenderTransformOrigin="0.5 0.5" Opacity="{Binding Opacity}" UseLayoutRounding="True" SnapsToDevicePixels="True">
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModel:SquareView}">
        <Border Width="{Binding ViewerWidth}" Height="{Binding ViewerHeight}" Background="{Binding Background}" CornerRadius="{Binding CornerRadius}" 
                BorderBrush="{Binding Stroke}" BorderThickness="{Binding StrokeThickness}" RenderTransform="{Binding Transform}" 
                RenderTransformOrigin="0.5 0.5" Opacity="{Binding Opacity}" UseLayoutRounding="True" SnapsToDevicePixels="True">
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModel:CircleView}">
        <Ellipse Width="{Binding ViewerWidth}" Height="{Binding ViewerHeight}" Fill="{Binding Background}" Stroke="{Binding Stroke}" 
                 StrokeThickness="{Binding StrokeThickness}" RenderTransform="{Binding Transform}" 
                 RenderTransformOrigin="0.5 0.5" Opacity="{Binding Opacity}" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModel:EllipseView}">
        <Ellipse Width="{Binding ViewerWidth}" Height="{Binding ViewerHeight}" Fill="{Binding Background}" Stroke="{Binding Stroke}" 
                 StrokeThickness="{Binding StrokeThickness}" RenderTransform="{Binding Transform}" 
                 RenderTransformOrigin="0.5 0.5" Opacity="{Binding Opacity}" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModel:TextView}">
        <FlowDocumentScrollViewer x:Name="textView" Width="{Binding ViewerWidth}" Height="{Binding ViewerHeight}" RenderTransform="{Binding Transform}"
                                  RenderTransformOrigin="0.5 0.5" Document="{Binding ViewerContent}" ScrollViewer.VerticalScrollBarVisibility="Hidden" 
                                  ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
                                  Opacity="{Binding Opacity}" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModel:ImageView}">
        <Image Width="{Binding ViewerWidth}" Height="{Binding ViewerHeight}" Stretch="{Binding Stretch}" Opacity="{Binding Opacity}" UseLayoutRounding="True" SnapsToDevicePixels="True"
               Source="{Binding Path}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModel:VideoView}">
        <Image Source="{Binding ThumbnailPath}" Width="{Binding ViewerWidth}" Height="{Binding ViewerHeight}" Stretch="{Binding Stretch}" Opacity="{Binding Opacity}"
               UseLayoutRounding="True" SnapsToDevicePixels="True"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type ViewModel:AudioView}">
        <Rectangle Width="{Binding ViewerWidth}" Height="{Binding ViewerHeight}" Fill="{Binding Background}" Opacity="{Binding Opacity}" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
    </DataTemplate>

    <ContextMenu x:Key="SlideContextMenu">
        <MenuItem Header="Quick Edit" Command="{Binding DataContext.QuickEditCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"/>
        <MenuItem Header="Edit Slide" Command="{Binding DataContext.ChangeViewModeCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" CommandParameter="Editor"/>
        <Separator/>
        <MenuItem Header="Disable Slide" Command="{Binding DataContext.DisableSlideToggleCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" CommandParameter="{Binding}"/>
        <MenuItem Header="Hot Key..." Command="{Binding DataContext.HotKeyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"/>
        <MenuItem Header="Next Slide Timer" Command="{Binding DataContext.NextSlideTimerCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"/>
        <MenuItem Header="Loop To First" Command="{Binding DataContext.LoopToFirstCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="Cut" Command="ApplicationCommands.Cut"/>
        <MenuItem Header="Copy" Command="ApplicationCommands.Copy"/>
        <MenuItem Header="Paste" Command="ApplicationCommands.Paste"/>
        <MenuItem Header="Delete" Command="ApplicationCommands.Delete"/>
        <MenuItem Header="Delete All" Command="{x:Static UICommon:EditorCommands.DeleteAllCommand}"/>
        <Separator/>
        <MenuItem Header="Select All" Command="ApplicationCommands.SelectAll"/>
        <MenuItem Header="Unselect All" Command="{x:Static UICommon:EditorCommands.UnSelectAllCommand}"/>
    </ContextMenu>

    <DataTemplate x:Key="SlideViewerItemTemplate">
        <Border x:Name="border" BorderBrush="Gray" BorderThickness="5" CornerRadius="5" Margin="1 2">
            <Border.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent"/>
            </Border.Resources>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="15"/>
                </Grid.RowDefinitions>
                <ListBox x:Name="slidePreview" Grid.Row="0" Width="{Binding ViewerWidth}" Height="{Binding ViewerHeight}" BorderThickness="0" Padding="-1"
                         ItemsSource="{Binding Elements}" Focusable="False" IsHitTestVisible="False" SnapsToDevicePixels="True"
                         ItemsPanel="{StaticResource SlideChildrenPanelTemplate}" UseLayoutRounding="True" 
                         ItemContainerStyle="{StaticResource SlideChildStyleBase}"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
                    <Border Visibility="{Binding HotKeyVisibility}" Background="Orange" CornerRadius="4" Padding="0" Margin="1" MinWidth="20">
                        <TextBlock Text="{Binding HotKey}" FontSize="18" FontWeight="Bold" SnapsToDevicePixels="True" HorizontalAlignment="Center"/>
                    </Border>                    
                    <Image Source="/SmartPresenter.UI.Controls;component/Images/Slide/looptofirst.png" MaxWidth="20" MaxHeight="20" Margin="2" 
                       SnapsToDevicePixels="True" Visibility="{Binding LoopToFirst, Converter={StaticResource BooleanVisibilityConverter}}"/>
                    <Image Source="/SmartPresenter.UI.Controls;component/Images/Slide/timer.png" MaxWidth="20" MaxHeight="20" Margin="0 2 2 2" 
                       SnapsToDevicePixels="True" Visibility="{Binding IsTimerAvailable}"/>
                </StackPanel>
                <Border Grid.Row="1" Background="Gray" CornerRadius="0 0 2 2">
                    <StackPanel Orientation="Horizontal" Margin="1 0 1 1">
                        <TextBlock Text="{Binding SlideNumber, StringFormat={}{0:#}.}" Foreground="White" Margin="2 0 0 0"/>
                        <TextBlock Text="{Binding Label}" Foreground="White" Grid.Row="1" Grid.Column="1" Margin="5 0 0 0"/>
                    </StackPanel>
                </Border>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="Blue"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                <Setter TargetName="border" Property="Opacity" Value="0.5"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>